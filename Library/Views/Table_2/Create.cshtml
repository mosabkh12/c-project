@model Library.Models.Book

@{
    ViewBag.Title = "Add A Book";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-image: url('https://www.teahub.io/photos/full/82-828177_white-book-backgrounds-powerpoint-template.jpg'); /* Add your beautiful background image here */
            background-size: cover;
            background-position: center;
            font-family: Arial, sans-serif;
            background-color: #7f7f6e;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            margin-top: 50px;
        }

        .form-container {
            background-color: rgba(255, 255, 255, 0.8); /* Adjust the alpha value (last parameter) to change transparency */
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .btn-primary {
            background-color: #314051;
            border: none;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }
    </style>
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="form-container">
                    <h2 class="text-center mb-4">Add Book</h2>
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.category, new SelectList(new[] { "Fantasy", "Romance", "Horror", "Adventure" , "Thriller" , "Mystery" }), "Select Category", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.onsale, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.onsale, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.onsale, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group text-center">
                            <button type="submit" class="btn btn-primary">Add To The Library</button>
                            <div class="success-message">@ViewBag.SuccessMessage</div>
                            <div class="alert-danger">@ViewBag.DuplicateMessage</div>

                            @*@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })*@
                        </div>
                        <div class="form-group text-center">
                            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>
</html>