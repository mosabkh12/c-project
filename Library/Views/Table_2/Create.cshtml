@model Library.Models.Book

@{
    ViewBag.Title = "Create";
}

<h2>Create New Book</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.onsale, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.onsale, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.onsale, "", new { @class = "text-danger" })
                </div>



                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Add To The Library</button>

                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
